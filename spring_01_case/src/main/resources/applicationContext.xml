<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd">

    <!--引入属性文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--配置StudentService-->
    <bean id="studentService" class="com.shiju.service.impl.StudentServiceImpl">
        <property name="mapper" ref="studentMapper"/>
    </bean>
    <!--配置连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--spring整合mybatis-->
    <!--配置SqlSessionFactory对象，底层负责创建SqlSessionFactoryBuilder、SqlSessionFactory对象，
        同时加载mybatis需要的环境信息-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--必须有-->
        <property name="dataSource" ref="dataSource"/>
        <!--可选-->
        <property name="typeAliasesPackage" value="com.shiju.bean"/>
        <!--配置mybatis的核心配置文件的位置，核心配置文件中也可以设置别名、映射文件位置等操作-->
        <!--<property name="configLocation" value="classpath:MybatisConfig.xml"/>-->
        <!--如果映射文件和mapper接口在同一个包下并且名称相同，可以不用配置-->
        <property name="mapperLocations" value="classpath:StudentMapper.xml"/>
    </bean>
    <!--MapperScannerConfigurer 扫描mapper接口，生成代理对象，存的spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.shiju.mapper"/>
    </bean>

</beans>